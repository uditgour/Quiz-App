/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Quiz.gui;

import Quiz.DAO.ExamDAO;
import Quiz.DAO.PerformanceDAO;
import Quiz.DAO.QuestionDAO;
import Quiz.pojo.Answer;
import Quiz.pojo.ExamProfile;
import Quiz.pojo.Question;
import Quiz.pojo.QuestionStore;
import Quiz.pojo.AnswerStore;
import Quiz.pojo.Performance;
import Quiz.pojo.UserProfile;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author gouru
 */
public class TakeTestFrame extends javax.swing.JFrame {
    private int qno,pos;
    private QuestionStore qs;
    private AnswerStore as;
    timer t=new timer();
    private int right=0,wrong=0;
    private int hh,mm;
    private boolean exit=false;
    private int i;
    public void setExit(boolean exit) {
        this.exit = exit;
    }
    /**
     * Creates new form TakeTestFrame
     */
    public TakeTestFrame() {
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        name.setText("Hello "+UserProfile.getUsername());
        qs=new QuestionStore();
        as=new AnswerStore();
        qno=1;        
        prev.setEnabled(false);
        Qno.setText("Question No. "+qno);
        title.setText(ExamProfile.getSubject()+" PAPER");
        this.loadQuestions();
        this.showQuestions();
        
        
        try{
          int time=ExamDAO.getTime(ExamProfile.getExamid());
         
           hh=time/60;
           mm=time%60;
           hour.setText("0"+hh);
           if(mm<10)
                min.setText("0"+mm);
           else
               min.setText(""+mm);
        
        }  
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        
        t.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ques = new javax.swing.JTextArea();
        Qno = new javax.swing.JLabel();
        opt1 = new javax.swing.JRadioButton();
        opt2 = new javax.swing.JRadioButton();
        opt3 = new javax.swing.JRadioButton();
        opt4 = new javax.swing.JRadioButton();
        next = new javax.swing.JButton();
        prev = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        done = new javax.swing.JButton();
        hour = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sec = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N

        name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ques.setEditable(false);
        ques.setColumns(20);
        ques.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ques.setRows(5);
        jScrollPane1.setViewportView(ques);

        Qno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonGroup1.add(opt1);
        opt1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonGroup1.add(opt2);
        opt2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonGroup1.add(opt3);
        opt3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonGroup1.add(opt4);
        opt4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        next.setText("NEXT");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        prev.setText("PREVIOUS");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        done.setText("DONE");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        hour.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        hour.setText("00");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText(":");

        min.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        min.setText("00");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText(":");

        sec.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        sec.setText("00");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel6.setText("TIME LEFT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(hour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(min)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sec)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(64, 64, 64))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Qno, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opt4)
                            .addComponent(opt3)
                            .addComponent(opt2)
                            .addComponent(opt1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(next)
                                .addGap(63, 63, 63)
                                .addComponent(prev)
                                .addGap(82, 82, 82)
                                .addComponent(cancel)
                                .addGap(80, 80, 80)
                                .addComponent(done))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(189, 189, 189))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(281, 281, 281))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hour)
                            .addComponent(jLabel2)
                            .addComponent(min)
                            .addComponent(jLabel4)
                            .addComponent(sec))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)))
                .addGap(13, 13, 13)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Qno, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(opt1)
                        .addGap(32, 32, 32)
                        .addComponent(opt2)
                        .addGap(35, 35, 35)
                        .addComponent(opt3)
                        .addGap(27, 27, 27)
                        .addComponent(opt4)
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prev)
                            .addComponent(cancel)
                            .addComponent(done)
                            .addComponent(next))))
                .addGap(0, 57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        
        String choosenAnswer=this.ChoosenAnswer();
        if(choosenAnswer!=null)
        {
            Question q=qs.getQuestion(pos);
            String correctAnswer=q.getCorrectanswer();
            Answer ans=new Answer(ExamProfile.getExamid(),ExamProfile.getSubject(),qno,choosenAnswer,correctAnswer);
            Answer attempted=as.getAnswerByQno(qno);
            if(attempted==null)
            {
                as.addAnswer(ans);
            }
            else
            {
                String prevAnswer=attempted.getChooseAnswer();
                if(prevAnswer.equals(choosenAnswer)==false)
                {
                    int apos=as.removeAnswer(attempted);
                    as.setAnswerAt(apos, ans);
                }
            }
        } 
        pos++;
        qno++;
        if(pos>0)
        {
            prev.setEnabled(true);
        }
         if(pos==qs.getCOunt()-1)
                {
                    next.setEnabled(false);
                }
        
        
        Qno.setText("Question No. "+qno);
        showQuestions();
       
    }//GEN-LAST:event_nextActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        String choosenAnswer=this.ChoosenAnswer();
        if(choosenAnswer!=null)
        {
            Question q=qs.getQuestion(pos);
            String correctAnswer=q.getCorrectanswer();
            Answer ans=new Answer(ExamProfile.getExamid(),ExamProfile.getSubject(),qno,choosenAnswer,correctAnswer);
            Answer attempted=as.getAnswerByQno(qno);
            if(attempted==null)
            {
                as.addAnswer(ans);
            }
            else
            {
                String prevAnswer=attempted.getChooseAnswer();
                if(prevAnswer.equals(choosenAnswer)==false)
                {
                    int apos=as.removeAnswer(attempted);
                    as.setAnswerAt(apos, ans);
                }
            }
        } 
        pos--;
        qno--;
        if(pos==0)
       {
           prev.setEnabled(false);
           next.requestFocus();
       }
       if(pos<qs.getCOunt())
       {
           next.setEnabled(true);
       }
        Qno.setText("Question No. "+qno);
        showQuestions();
        
    }//GEN-LAST:event_prevActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        int a=JOptionPane.showConfirmDialog(null, "Are You Sure You Want To Submit", "SUBMIT", JOptionPane.YES_NO_OPTION);
        if(a==JOptionPane.YES_OPTION)
        {
        exit=true;
        doneButton();  
        }
    }//GEN-LAST:event_doneActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       int a=JOptionPane.showConfirmDialog(null, "ARE YOU SURE", "EXIT", JOptionPane.YES_NO_OPTION);
       if(a==JOptionPane.YES_OPTION)
       {
           this.dispose();
           exit=true;
           StudentOptionsFrame sof=new StudentOptionsFrame();
           sof.setVisible(true);
       }
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Qno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JButton done;
    private javax.swing.JLabel hour;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel min;
    private javax.swing.JLabel name;
    private javax.swing.JButton next;
    private javax.swing.JRadioButton opt1;
    private javax.swing.JRadioButton opt2;
    private javax.swing.JRadioButton opt3;
    private javax.swing.JRadioButton opt4;
    private javax.swing.JButton prev;
    private javax.swing.JTextArea ques;
    private javax.swing.JLabel sec;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
private void loadQuestions()
    {
        try{
         ArrayList<Question>list=QuestionDAO.getQuestions(ExamProfile.getExamid());
        
        for(Question q:list)
        {
            qs.addQuestion(q);
        }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
            
        }
    }
private boolean Validate()
{
    if(opt1.isSelected()==false&&opt2.isSelected()==false&&opt3.isSelected()==false&&opt4.isSelected()==false)       
            return true;
        else
            return false;
}

private void showQuestions()
{
      Question q=qs.getQuestion(pos);
      
       buttonGroup1.clearSelection();
       ques.setText(q.getQuestion());
       opt1.setText(q.getAnswer1());
       opt2.setText(q.getAnswer2());
       opt3.setText(q.getAnswer3());
       opt4.setText(q.getAnswer4());
       Answer ans=as.getAnswerByQno(qno);
       if(ans==null)
       {
           return;
       }
       String str=ans.getChooseAnswer();
       switch(str)
       {
           case "ANSWER1":
               opt1.setSelected(true);
               break;
           case "ANSWER2":
               opt2.setSelected(true);
               break;
           case "ANSWER3":
               opt3.setSelected(true);
               break;
           case "ANSWER4":
               opt4.setSelected(true);
               break;
           
               
       }
               
 }
private String ChoosenAnswer(){
    if(opt1.isSelected()==true)
        return "ANSWER1";
    else if(opt2.isSelected()==true)
        return "ANSWER2";
    else if(opt3.isSelected()==true)
        return "ANSWER3";
    else if(opt4.isSelected()==true)
        return "ANSWER4";
    else
        return null;
    
}
class timer extends Thread{
    @Override
    public void run() {
        try{
            
            
                for(;hh>=0;)
                {
                    
                      
                for(;mm>=0;)
                {
                mm--;
                if(mm==-1)
                {
                    mm=59;
                    hh--;
                    if(hh==-1)
                        break;
                    hour.setText("0"+hh);
                }
                if(mm<10)
                    min.setText("0"+mm);
                else
                    min.setText(""+mm);
                for( i=59;i>=0;i--)
                {
                    if(exit)
                        break;  
                    if(i<10)
                        sec.setText("0"+i);
                    else
                        sec.setText(""+i);
                    Thread.sleep(1000);
                    
                   
                }
              }
                
            }
                
               if(Integer.valueOf(hour.getText())==0&&Integer.valueOf(min.getText())==0&&Integer.valueOf(sec.getText())==0)
               {
                    JOptionPane.showMessageDialog(null, "Your test is over");
                    doneButton();
               }
                
                
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
}
    private void doneButton()
    {
        String choosenAnswer=this.ChoosenAnswer();
        if(choosenAnswer!=null)
        {
            Question q=qs.getQuestion(pos);
            String correctAnswer=q.getCorrectanswer();
            Answer ans=new Answer(ExamProfile.getExamid(),ExamProfile.getSubject(),qno,choosenAnswer,correctAnswer);
            Answer attempted=as.getAnswerByQno(qno);
            if(attempted==null)
            {
                as.addAnswer(ans);
            }
            else
            {
                String prevAnswer=attempted.getChooseAnswer();
                if(prevAnswer.equals(choosenAnswer)==false)
                {
                    int apos=as.removeAnswer(attempted);
                    as.setAnswerAt(apos, ans);
                }
            }
        } 
        
        for(Question q:qs.getAllQuestions())
        {
            int qno=q.getQno();
            Answer ans=as.getAnswerByQno(qno);
            if(ans==null)
            {
                continue;
            }
            String attemptedAnswer=ans.getChooseAnswer();
            String correctAnswer=ans.getCorrectAnswer();
            if(attemptedAnswer.equals(correctAnswer))
                ++right;
            else
                ++wrong;
        }
            int unattempted=qs.getCOunt()-(right+wrong);
            StringBuilder sb=new StringBuilder();
            sb.append("\n RIGHT ANSWER "+right);
            sb.append("\n WRONG ANSWER "+wrong);
            sb.append("\n UNATTEMPTED ANSWER "+(unattempted));
            JOptionPane.showMessageDialog(null, sb.toString(), "RESULT!", JOptionPane.INFORMATION_MESSAGE);
            
            try{
                Performance p=new Performance(UserProfile.getUsername(),ExamProfile.getExamid(),right,wrong,unattempted,(double)right/qs.getCOunt()*100,ExamProfile.getSubject());
                PerformanceDAO.addPerformance(p);
                JOptionPane.showMessageDialog(null, "RESULT SAVED\nTHANK YOU FOR THE TEST", "DONE!", JOptionPane.INFORMATION_MESSAGE);
                ChoosePaperFrame cpf=new ChoosePaperFrame();
                cpf.setVisible(true);
                this.dispose();
                
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        
    }
    
}
