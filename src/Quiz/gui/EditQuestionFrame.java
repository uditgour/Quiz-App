/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Quiz.gui;

import Quiz.DAO.ExamDAO;
import Quiz.DAO.QuestionDAO;
import Quiz.pojo.ExamProfile;
import Quiz.pojo.Question;
import Quiz.pojo.QuestionStore;
import Quiz.pojo.UserProfile;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author gouru
 */
public class EditQuestionFrame extends javax.swing.JFrame {
     private ArrayList<Question> list=new ArrayList<>();
    
    private Question q;
    private QuestionStore qs=new QuestionStore();
    private HashMap<String,String> option=new HashMap<>();
    private int x=0;
    private int a=1;
    
    /**
     * Creates new form EditQuestionFrame
     */
    public EditQuestionFrame() {
        initComponents();
        setLocationRelativeTo(null);
        name.setText("Hello "+UserProfile.getUsername());
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setResizable(false);
        
        title.setText("EDITING "+ExamProfile.getSubject()+" PAPER");
         option.put("OPTION 1", "ANSWER1");
         option.put("OPTION 2", "ANSWER2");
         option.put("OPTION 3", "ANSWER3");
         option.put("OPTION 4", "ANSWER4");
        
        prev.setEnabled(false);
        this.loadQuestions();
        list=qs.getAllQuestions();
        this.showQuestions();
         try{
             time.setText(String.valueOf(ExamDAO.getTime(ExamProfile.getExamid())));
         }
         catch(Exception ex)
         {
             ex.printStackTrace();
         }
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        qno = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ques = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        opt1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        opt3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        opt2 = new javax.swing.JTextField();
        opt4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        opt = new javax.swing.JComboBox<>();
        next = new javax.swing.JButton();
        prev = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        DONE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        title.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/questionpaper4.jpg"))); // NOI18N

        qno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ques.setColumns(20);
        ques.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ques.setRows(5);
        jScrollPane1.setViewportView(ques);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("OPTION 1");

        opt1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("OPTION 3");

        opt3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("OPTION 2");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("OPTION 4");

        opt2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opt2ActionPerformed(evt);
            }
        });

        opt4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("CORRECT OPTION");

        opt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPTION 1", "OPTION 2", "OPTION 3", "OPTION 4" }));
        opt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        next.setText("NEXT");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        prev.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prev.setText("PREVIOUS");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        DONE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DONE.setText("DONE");
        DONE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DONEActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("TIME(IN MINUTES)");

        time.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(qno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(jLabel4))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(jLabel5))
                                            .addComponent(opt1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                            .addComponent(opt3))
                                        .addGap(71, 71, 71)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(opt4)
                                            .addComponent(opt2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(57, 57, 57)
                                                .addComponent(jLabel7))))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(next)
                                        .addGap(34, 34, 34)
                                        .addComponent(prev)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DONE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel8)
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancel)
                            .addComponent(opt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(qno, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(opt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(prev)
                    .addComponent(cancel)
                    .addComponent(DONE))
                .addGap(0, 28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optActionPerformed

    private void opt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opt2ActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
                if(Validate())
                {
                    JOptionPane.showMessageDialog(null, "PLEASE FILL ALL FILED","ERROR!",JOptionPane.ERROR_MESSAGE);
                }
                else{
                qs.removeQuestion(x);
                
                String CorrectOption=option.get(opt.getSelectedItem().toString());
                Question q=new Question(ExamProfile.getExamid(),a,ques.getText(),opt1.getText(),opt2.getText(),opt3.getText(),opt4.getText(),CorrectOption,ExamProfile.getSubject());
                 a++;
                qs.setQuestionAt(x, q);
                x++;
                if(x>0)
                {
                    prev.setEnabled(true);
                }
                this.showQuestions();
                if(x==list.size()-1)
                {
                    next.setEnabled(false);
                }
                }
       
            
    }//GEN-LAST:event_nextActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
         if(Validate())
         {
             JOptionPane.showMessageDialog(null, "PLEASE FILL ALL FILED","ERROR!",JOptionPane.ERROR_MESSAGE);
         }
         else{       
        qs.removeQuestion(x);
        String CorrectOption=option.get(opt.getSelectedItem().toString());
        Question q=new Question(ExamProfile.getExamid(),a,ques.getText(),opt1.getText(),opt2.getText(),opt3.getText(),opt4.getText(),CorrectOption,ExamProfile.getSubject());
        a--;
        qs.setQuestionAt(x, q);
        x--;
       
       if(x==0)
       {
           prev.setEnabled(false);
           next.requestFocus();
       }
       if(x<list.size())
       {
           next.setEnabled(true);
       }
       this.showQuestions();
         }

    }//GEN-LAST:event_prevActionPerformed

    private void DONEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DONEActionPerformed
        
        
                qs.removeQuestion(x);
        
                String CorrectOption=option.get(opt.getSelectedItem().toString());
                 Question q=new Question(ExamProfile.getExamid(),a,ques.getText(),opt1.getText(),opt2.getText(),opt3.getText(),opt4.getText(),CorrectOption,ExamProfile.getSubject());
                a--;
                 qs.setQuestionAt(x, q);
          try{
              ExamDAO.setTime(Integer.valueOf(time.getText()), ExamProfile.getExamid());
              int y=JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO UPDATE THESE QUESTION", "UPDATE", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
              a++;
              if(y==JOptionPane.YES_OPTION)
              {
              QuestionDAO.updateQuestion(qs);
              AdminOptionFrame aop=new AdminOptionFrame();
              aop.setVisible(true);
          this.dispose();
              }
              
          }
          catch(NumberFormatException n)
          {
              n.printStackTrace();
          }
          catch(Exception ex)
          {
              ex.printStackTrace();
          }
    }//GEN-LAST:event_DONEActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        int y=JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO UPDATE THESE QUESTION", "UPDATE", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(y==JOptionPane.YES_OPTION)
        {
        this.dispose();
        AdminOptionFrame aop=new AdminOptionFrame();
        aop.setVisible(true);
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditQuestionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditQuestionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditQuestionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditQuestionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditQuestionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DONE;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JButton next;
    private javax.swing.JComboBox<String> opt;
    private javax.swing.JTextField opt1;
    private javax.swing.JTextField opt2;
    private javax.swing.JTextField opt3;
    private javax.swing.JTextField opt4;
    private javax.swing.JButton prev;
    private javax.swing.JLabel qno;
    private javax.swing.JTextArea ques;
    private javax.swing.JTextField time;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
private void loadQuestions()
    {
        try{
        list=QuestionDAO.getQuestions(ExamProfile.getExamid());
        
        for(Question q:list)
        {
            qs.addQuestion(q);
        }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
            
        }
    }
private void showQuestions()
        {
            q=list.get(x);
        String Qno=String.valueOf(q.getQno());
                qno.setText("QUESTION NO. "+Qno);
                ques.setText(q.getQuestion());
                opt1.setText(q.getAnswer1());
                opt2.setText(q.getAnswer2());
                opt3.setText(q.getAnswer3());
                opt4.setText(q.getAnswer4());
                if(q.getCorrectanswer().equalsIgnoreCase("ANSWER1"))
                {
                    opt.setSelectedIndex(0);
                }
                if(q.getCorrectanswer().equalsIgnoreCase("ANSWER2"))
                {
                    opt.setSelectedIndex(1);
                }
                if(q.getCorrectanswer().equalsIgnoreCase("ANSWER3"))
                {
                    opt.setSelectedIndex(2);
                }
                if(q.getCorrectanswer().equalsIgnoreCase("ANSWER4"))
                {
                    opt.setSelectedIndex(3);
                }
        }
 private boolean Validate() {
        if(ques.getText().isEmpty()||opt1.getText().isEmpty()||opt2.getText().isEmpty()||
           opt3.getText().isEmpty()||opt4.getText().isEmpty())
            return true;
        else
            return false;
    }

}
